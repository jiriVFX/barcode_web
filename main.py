from __future__ import print_function
import time
import os
from dotenv import load_dotenv
import cloudmersive_barcode_api_client
from cloudmersive_barcode_api_client.rest import ApiException
# import urllib.request
# import requests
# from urllib3.util import url
import io
import base64
from PIL import Image

# Don't panic! The free account's requests take several seconds to get back response

# Configure API key authorization: Apikey
configuration = cloudmersive_barcode_api_client.Configuration()
# load your API_KEY from external .env file (must be in the project root folder)
load_dotenv()
# get the key from environment variable
configuration.api_key["Apikey"] = os.environ.get("API_KEY")


# ----------------------------------------------------------------------------------------------------------------------
# Read barcode
def read_barcode(img_path="static/img/barcode.png"):
    # create an instance of the API class
    api_reader = cloudmersive_barcode_api_client.BarcodeScanApi(
        cloudmersive_barcode_api_client.ApiClient(configuration))
    # file | Image file to perform the operation on.  Common file formats such as PNG, JPEG are supported.
    image_file = img_path

    try:
        # Scan and recognize an image of a barcode
        api_response = api_reader.barcode_scan_image(image_file)
        print(api_response)
    except ApiException as e:
        print("Exception when calling BarcodeScanApi->barcode_scan_image: %s\n" % e)


# ----------------------------------------------------------------------------------------------------------------------
# Generate barcode
def generate_qrcode(data_to_encode="https://github.com/jiriVFX"):
    # create an instance of the API class
    api_generator = cloudmersive_barcode_api_client.GenerateBarcodeApi(cloudmersive_barcode_api_client.ApiClient(configuration))
    # string data to be encoded into QR code
    data = data_to_encode

    try:
        # Generate a UPC-A code barcode as PNG file
        api_response = api_generator.generate_barcode_qr_code(data)
        return api_response
    except ApiException as e:
        print("Exception when calling GenerateBarcodeApi->generate_barcode_upca: %s\n" % e)


# ----------------------------------------------------------------------------------------------------------------------
# Write data received in url format to actual image file
# byte_string = generate_qrcode()
# byte_data = byte_string
# byte_data = byte_string.encode()
# print(byte_data)

# # One time use only to create TXT file
# with open("qr_code.txt", "w") as file:
#     file.write(byte_data)

# Read bytes from TXT file - just for caching - not using too many API calls while testing
with open("qr_code.txt", "rb") as file:
    byte_data = file.read()

print(byte_data)

image = Image.open(io.BytesIO(byte_data))
image.show()
image.save("qr_code.png")

# clean_bytes = []
# for byte in byte_data:
#     clean_bytes.append(int(byte))
#
# print(bytearray(clean_bytes))
# byte_data = byte_data.replace("\\", "")
# byte_data = byte_data.replace("'", "")
# byte_data = byte_data.replace("`", "")
# # remove the b at the beginning
# byte_data = byte_data[1:]
# # convert back to bytes
# byte_data = str.encode(byte_data)
# # print(list(byte_data))
# #byte_data = bytes(byte_data, "utf-8")
# print(byte_data)


# clean_bytes = []
# byte = ""
# for i in range(len(byte_data)):
#     if i > 0 and byte_data[i] != "'":
#         if byte_data[i] == "\\":
#             if byte != "":
#                 clean_bytes.append(byte)
#             byte = ""
#         else:
#             byte += byte_data[i]
#
# # print(clean_bytes)
#
# byte_string = ""
# for byte in clean_bytes:
#     byte_string += byte
#
# # print(bytes(byte_string, "utf-8"))
# # byte_string = bytes(clean_bytes, "utf-8")
# byte_string = bytes(byte_string, "utf-8")
# print(byte_string)

image = Image.open(io.BytesIO(byte_string))
image.show()
image.save("qr_code.png")

# b'x89PNGrnx1anx00x00x00rIHDRx00x00x00dx00x00x00dx08x02x00x00x00xffx80x02x03x00x00x00x01sRGBx00xaexcex1cxe9x00x00x00x04gAMAx00x00xb1x8fx0bxfcax05x00x00x00tpHYsx00x00x0exc3x00x00x0exc3x01xc7oxa8dx00x00x05dIDATx^xedxd0xc1xaexe48x0cCxd1xf9xffx9fxeexa9xc6;0x84x8exa0xd0Ixf5,x06xbex9b@!EIxfexe7xd7!xe6<xd6x06xe7xb168x8fxb5xc1yxacrxcecmpx1ekx83xf3Xx1bx9cxc7xdaxe0<xd6x06xe7xb168x8fxb5Axf4XxffxbcCJx81xd0xc1Q txd2x82xe3)Rxee8x8fxf5x1b)wx9cxc7xfax8dx94;xf6x1eKx9dxa1xebb-x10xbax1cxf5xf8AOxdcx15xf9DxfexcdUXx0bx84.G=xfeIxd0x13wE>x91x7fsx15xd6x02xa1xcbQx8fx7fx12xf4xc4]x91Odxb7xdcx15x8eqx15Bx07Gx810&xabxbb?W8xbaxaex99xc8xf2{xabx10:8nx841Yxddxfdxb9xc2xd1uxcdD>x91xdf[x85xd0xc1Q x8cxc9xeaxeexcfx15x8exaek&xf2x89|xbdx8azxcc!x8c#x16xacYxf2x82xa3xebx9ax89|"_xafxa2x1esx08xe3x88x05kx96xbcxe0xe8xbaf"x9fxc8xd7xabxa8xc7x1cxc28bxc1x9a%/8xbaxaex99xc8xf2xf5*xeaxecxcfx82P lxe6,8xbaxaex99xc8xf2xf5*xeaxecxcfx82P lxe6,8xbaxaex99xc8xf2xf5*xeaxecxcfx82P lxe6,8xbaxaex99xc82x0exfdAOxd7E(x10nx84x02xa1KVx7foxc3x96xc8xf2{xabx10nx84x02xa1@xe8x92xd5xdfxdbxb0%xf2x89xfcxde*x84x02xa1@(x10xbadxf5xf76lx89|"x9f"%;Rxfdxf4xcf3xa4xdcx11xf9D>Excaxe6xd9xeaxcd?xcfx90rGxe4x13xf9x14)x9bgxab7xff<Cxcax1dxa9xefxbbxd8xb1xdbx920>x04xe1?xe7<xd6x06xe7xb16x88x06xdbxb1@xe8xe0xe8xe0x18x03xd5#xac#xacx05xc2x0bxbe?x98xa3x83cx0cTx8fxb0x8exb0x16x08/xf8xfex8ex0ex8e1P=xc2:xc2Z xbcoxb0zxfcxb3 txe6x05ax94xaeptpdxe8x89x89x1adx8fxf7xabx0bx84xcexbc x8cxd2x15x8ex0ex8ex0c=1Qx83xecxf1~ux81xd0x99x17x84Qxbaxc2xd1xc1x91xa1&jx90xddxc1xb1xb9xe5Bxf3xe6x08ux07Gx07Gxe7!xdcx11xf9Dvpx8cx9ex01xcdx9b#xd4x1dx1cx1dx1cx9dx87pGxe4x13xd9xc11zx064ox8ePwptptx1exc2x1dxa9xefx0fx0cxc9xc6xb0x16x08x9b{sdxe8x19W%dW|H}x7fH6x86xb5@x18xa5+x1cx19zxc6Utxd9x15x1fRxdfx1fx18x92x8da-x10Fxe9nGx86x9eqUBvxc5x87xc82xbbDx9dmxb9 xbcx9exb5 x8cxb0fxe6x0f_x0bxe5xe8x0ePx17x08x05xc2xebYx0bxc2x08kfxfexf0xb5Px8exeex00ux81P xbcx9exb5 x8cxb0fxe6x0f{xa1W8FXGXxc7xb3xd5x9bx7fxaepx8cx9ex96xa8Avx07xc7x08xebx08kg&tGxaaxc7?W8FOKxd4 xbbx83cx84ux84xb53x13xba#xd5xe3x9f+x1cxa3xa7%jx90x9dm9xc0xdax99t]xf2x82xb09txa1gx9c>x13xf9Dx8exa9GXxc7uxd5xddx01x84xcdxa1x0b=xe3xf4x99xc8r<I=xc2:xaexabxeex0e lx0e]xe8x19xa7xcfD>x91x9bx07xa8;8nx84lxd6x82xf0ZRxdfx11xf9Dx8ex07xa8xb3r8nx84lxd6x82xf0ZRxdfx11xf9Dx8ex07xa8xb3r8nx84lxd6x82xf0ZRxdfx11xf9Dx8exa1x1cx1dx1cx05xc2xb8xb7xfa5xe2xb2+fxa2NCxc61x1cx1dx1cx05xc2xx89xfa5xe2xb2+fxa2NCxc61x1cx1dx1cx05xc2xx89xfa5xe2xb2+fx9ew>xc0xb2x9bx07pxbcxeezxcf7xb3nxb1xfeyxacx04xebxffxbfx1fxcbxd8xa7Hxe9rx08x99xa4~xfaxe7nxc7xe8xa9D>x91Ox91xd2xe5x102Ixfdxf4xcfx15x8exd1Sx89|"x9f"xa5xcb!dx92xfaxe9x9f+x1cxa3xa7x12xf9Dxc6xa1?xe8xe9x0ex18xedxe0(x10:86wx9ex89xb2x8c=x8fxe5;bxecy,xdfx11cxb3xb39x9exaexabxe7{xc8}xbaO%xea4xe4<x96xefx88!xe7xb1|Gx0cxf9xdecx11nx84x02ax13xcd#xacx05xc2x1d{xe9xeaxf1x12x8exaekA(x10nx84M4x8fxb0x16x08wxecxa5xabxc7K8xbaxaex05xa1@(x106xd1<xc2Z xdcxb1x97xaex1e/xe1xe8xbaxaeplvm!xae@xd8x9fx15xf9Dvcxaepdxabpxbc8xe0x16qx05xc2xfexacxc8xb2x1bsx85#[x85xe3xc5x01xb7x88+x10xf6gE>x91x9bx07xe8xe9x96[x10xc6x11x84x0ex8ex02xa1@xe8xe0x18=x95xc82x0exfdAOxe9Rx17x08xe3x08Bx07Gx81P tpx8cx9eJxe4x13x19x87xfexa0xa7txa9x0bx84qx04xa1x83xa3@(x10:8FO%xf2x89|x8ax94xf1x12xf5xf8gAxe8xe0(x106xa5x96xc8xf2)Rxbax1cBxb7xb7z<xf2nGx81xb0)xb5D>x91Ox91xd2xe5x10xbaxbdxd5xe3x91W8nx84Mxa9%xf5x1d>x9cxc7xdaxe0<xd6x06xe7xb168x8fxb5xc1yxacrxcecmpx1ekx83xf3Xx1bx9cxc7xdaxe0<xd6x06xe7xb168x8fx15xf3xebxd7xbfx93ex1cvzxce<x00x00x00x00IENDxaeBx82'
# b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00d\x00\x00\x00d\x08\x02\x00\x00\x00\xff\x80\x02\x03\x00\x00\x00\x01sRGB\x00\xae\xce\x1c\xe9\x00\x00\x00\x04gAMA\x00\x00\xb1\x8f\x0b\xfca\x05\x00\x00\x00\tpHYs\x00\x00\x0e\xc3\x00\x00\x0e\xc3\x01\xc7o\xa8d\x00\x00\x05dIDATx^\xed\xd0\xc1\xae\xe48\x0cC\xd1\xf9\xff\x9f\xee\xa9\xc6;0\x84\x8e\xa0\xd0I\xf5,\x06\xbe\x9b@!EI\xfe\xe7\xd7!\xe6<\xd6\x06\xe7\xb168\x8f\xb5\xc1y\xac\r\xcecmp\x1ek\x83\xf3X\x1b\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\xb5A\xf4X\xff\xbcCJ\x81\xd0\xc1Q t\xd2\x82\xe3)R\xee8\x8f\xf5\x1b)w\x9c\xc7\xfa\x8d\x94;\xf6\x1eK\x9d\xa1\'\xebb-\x10\xba\x1c\xf5\xf8\'AO\xdc\x15\xf9D\xfe\xcdUX\x0b\x84.G=\xfeI\xd0\x13wE>\x91\x7fs\x15\xd6\x02\xa1\xcbQ\x8f\x7f\x12\xf4\xc4]\x91Od\xb7\xdc\x15\x8eq\x15B\x07G\x810&\xab\xbb?W8\xba\xae\x99\xc8\'\xf2{\xab\x10:8\n\x841Y\xdd\xfd\xb9\xc2\xd1u\xcdD>\x91\xdf[\x85\xd0\xc1Q \x8c\xc9\xea\xee\xcf\x15\x8e\xaek&\xf2\x89|\xbd\x8az\xcc!\x8c#\x16\xacY\xf2\x82\xa3\xeb\x9a\x89|"_\xaf\xa2\x1es\x08\xe3\x88\x05k\x96\xbc\xe0\xe8\xbaf"\x9f\xc8\xd7\xab\xa8\xc7\x1c\xc28b\xc1\x9a%/8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'2\x0e\xfdAO\xd7E(\x10\n\x84\x02\xa1KV\x7fo\xc3\x96\xc8\'\xf2{\xab\x10\n\x84\x02\xa1@\xe8\x92\xd5\xdf\xdb\xb0%\xf2\x89\xfc\xde*\x84\x02\xa1@(\x10\xbad\xf5\xf76l\x89|"\x9f"%;R\xfd\xf4\xcf3\xa4\xdc\x11\xf9D>E\xca\xe6\xd9\xea\xcd?\xcf\x90rG\xe4\x13\xf9\x14)\x9bg\xab7\xff<C\xca\x1d\xa9\xef\xbb\xd8\xb1\xdb\x920>\x04\xe1?\xe7<\xd6\x06\xe7\xb16\x88\x06\xdb\xb1@\xe8\xe0\xe8\xe0\x18\x03\xd5#\xac#\xac\x05\xc2\x0b\xbe?\x98\xa3\x83c\x0cT\x8f\xb0\x8e\xb0\x16\x08/\xf8\xfe`\x8e\x0e\x8e1P=\xc2:\xc2Z \xbc`o\xb0z\xfc\xb3 t\xe6\x05a\x94\xaeptpd\xe8\x89\x89\x1ad\x8f\xf7\xab\x0b\x84\xce\xbc \x8c\xd2\x15\x8e\x0e\x8e\x0c=1Q\x83\xec\xf1~u\x81\xd0\x99\x17\x84Q\xba\xc2\xd1\xc1\x91\xa1\'&j\x90\xdd\xc1\xb1\xb9\xe5B\xf3\xe6\x08u\x07G\x07G\xe7!\xdc\x11\xf9Dvp\x8c\x9e\x01\xcd\x9b#\xd4\x1d\x1c\x1d\x1c\x9d\x87pG\xe4\x13\xd9\xc11z\x064o\x8ePwptpt\x1e\xc2\x1d\xa9\xef\x0f\x0c\xc9\xc6\xb0\x16\x08\x9b{sd\xe8\x19W%dW|H}\x7f`H6\x86\xb5@\x18\xa5+\x1c\x19z\xc6U\t\xd9\x15\x1fR\xdf\x1f\x18\x92\x8da-\x10F\xe9\nG\x86\x9eqUBv\xc5\x87\xc8\'2\xbbD\x9dm\xb9 \xbc\x9e\xb5 \x8c\xb0f\xe6\x0f_\x0b\xe5\xe8\x0eP\x17\x08\x05\xc2\xebY\x0b\xc2\x08kf\xfe\xf0\xb5P\x8e\xee\x00u\x81P \xbc\x9e\xb5 \x8c\xb0f\xe6\x0f{\xa1W8FXGX\xc7\xb3\xd5\x9b\x7f\xaep\x8c\x9e\x96\xa8Av\x07\xc7\x08\xeb\x08kg&tG\xaa\xc7?W8FOK\xd4 \xbb\x83c\x84u\x84\xb53\x13\xba#\xd5\xe3\x9f+\x1c\xa3\xa7%j\x90\x9dm9\xc0\xda\x99\t]\xf2\x82\xb09t\xa1g\x9c>\x13\xf9D\x8e\'\xa9GX\xc7u\xd5\xdd\x01\x84\xcd\xa1\x0b=\xe3\xf4\x99\xc8\'r<I=\xc2:\xae\xab\xee\x0e l\x0e]\xe8\x19\xa7\xcfD>\x91\x9b\x07\xa8;8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\x07\xa8\xb3\r8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\x07\xa8\xb3\r8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\xa1\x1c\x1d\x1c\x05\xc2\xb8\xb7\xfa5\xe2\xb2+f\xa2NC\xc61\x1c\x1d\x1c\x05\xc2x\x89\xfa5\xe2\xb2+f\xa2NC\xc61\x1c\x1d\x1c\x05\xc2x\x89\xfa5\xe2\xb2+f\x9ew>\xc0\xb2\x9b\x07p\xbc\xeez\xcf7\xb3n\xb1\xfey\xac\x04\xeb\xff\xbf\x1f\xcb\xd8\xa7H\xe9r\x08\x99\xa4~\xfa\xe7\n\xc7\xe8\xa9D>\x91O\x91\xd2\xe5\x102I\xfd\xf4\xcf\x15\x8e\xd1S\x89|"\x9f"\xa5\xcb!d\x92\xfa\xe9\x9f+\x1c\xa3\xa7\x12\xf9D\xc6\xa1?\xe8\xe9\x0e\x18`\xed\xe0(\x10:86w\x9e\x89\xb2\x8c=\x8f\xe5;b\xecy,\xdf\x11c\xb3\xb39\x9e\xae\xab\xe7{\xc8}\xbaO%\xea4\xe4<\x96\xef\x88!\xe7\xb1|G\x0c\xf9\xdec\x11\n\x84\x02a\x13\xcd#\xac\x05\xc2\x1d{\xe9\xea\xf1\x12\x8e\xaekA(\x10\n\x84M4\x8f\xb0\x16\x08w\xec\xa5\xab\xc7K8\xba\xae\x05\xa1@(\x106\xd1<\xc2Z \xdc\xb1\x97\xae\x1e/\xe1\xe8\xba\xaeplvm!\xae@\xd8\x9f\x15\xf9Dvc\xaepd\xabp\xbc8\xe0\x16q\x05\xc2\xfe\xac\xc8\'\xb2\x1bs\x85#[\x85\xe3\xc5\x01\xb7\x88+\x10\xf6gE>\x91\x9b\x07\xe8\xe9\x96[\x10\xc6\x11\x84\x0e\x8e\x02\xa1@\xe8\xe0\x18=\x95\xc8\'2\x0e\xfdAO\xe9R\x17\x08\xe3\x08B\x07G\x81P tp\x8c\x9eJ\xe4\x13\x19\x87\xfe\xa0\xa7t\xa9\x0b\x84q\x04\xa1\x83\xa3@(\x10:8FO%\xf2\x89|\x8a\x94\xf1\x12\xf5\xf8gA\xe8\xe0(\x106\xa5\x96\xc8\'\xf2)R\xba\x1cB\xb7\xb7z<\xf2\nG\x81\xb0)\xb5D>\x91O\x91\xd2\xe5\x10\xba\xbd\xd5\xe3\x91W8\n\x84M\xa9%\xf5\x1d>\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\xb5\xc1y\xac\r\xcecmp\x1ek\x83\xf3X\x1b\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\x15\xf3\xeb\xd7\xbf\x93`e\x1cvz\xce<\x00\x00\x00\x00IEND\xaeB`\x82'

# byte_data = b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00d\x00\x00\x00d\x08\x02\x00\x00\x00\xff\x80\x02\x03\x00\x00\x00\x01sRGB\x00\xae\xce\x1c\xe9\x00\x00\x00\x04gAMA\x00\x00\xb1\x8f\x0b\xfca\x05\x00\x00\x00\tpHYs\x00\x00\x0e\xc3\x00\x00\x0e\xc3\x01\xc7o\xa8d\x00\x00\x05dIDATx^\xed\xd0\xc1\xae\xe48\x0cC\xd1\xf9\xff\x9f\xee\xa9\xc6;0\x84\x8e\xa0\xd0I\xf5,\x06\xbe\x9b@!EI\xfe\xe7\xd7!\xe6<\xd6\x06\xe7\xb168\x8f\xb5\xc1y\xac\r\xcecmp\x1ek\x83\xf3X\x1b\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\xb5A\xf4X\xff\xbcCJ\x81\xd0\xc1Q t\xd2\x82\xe3)R\xee8\x8f\xf5\x1b)w\x9c\xc7\xfa\x8d\x94;\xf6\x1eK\x9d\xa1\'\xebb-\x10\xba\x1c\xf5\xf8\'AO\xdc\x15\xf9D\xfe\xcdUX\x0b\x84.G=\xfeI\xd0\x13wE>\x91\x7fs\x15\xd6\x02\xa1\xcbQ\x8f\x7f\x12\xf4\xc4]\x91Od\xb7\xdc\x15\x8eq\x15B\x07G\x810&\xab\xbb?W8\xba\xae\x99\xc8\'\xf2{\xab\x10:8\n\x841Y\xdd\xfd\xb9\xc2\xd1u\xcdD>\x91\xdf[\x85\xd0\xc1Q \x8c\xc9\xea\xee\xcf\x15\x8e\xaek&\xf2\x89|\xbd\x8az\xcc!\x8c#\x16\xacY\xf2\x82\xa3\xeb\x9a\x89|"_\xaf\xa2\x1es\x08\xe3\x88\x05k\x96\xbc\xe0\xe8\xbaf"\x9f\xc8\xd7\xab\xa8\xc7\x1c\xc28b\xc1\x9a%/8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'2\x0e\xfdAO\xd7E(\x10\n\x84\x02\xa1KV\x7fo\xc3\x96\xc8\'\xf2{\xab\x10\n\x84\x02\xa1@\xe8\x92\xd5\xdf\xdb\xb0%\xf2\x89\xfc\xde*\x84\x02\xa1@(\x10\xbad\xf5\xf76l\x89|"\x9f"%;R\xfd\xf4\xcf3\xa4\xdc\x11\xf9D>E\xca\xe6\xd9\xea\xcd?\xcf\x90rG\xe4\x13\xf9\x14)\x9bg\xab7\xff<C\xca\x1d\xa9\xef\xbb\xd8\xb1\xdb\x920>\x04\xe1?\xe7<\xd6\x06\xe7\xb16\x88\x06\xdb\xb1@\xe8\xe0\xe8\xe0\x18\x03\xd5#\xac#\xac\x05\xc2\x0b\xbe?\x98\xa3\x83c\x0cT\x8f\xb0\x8e\xb0\x16\x08/\xf8\xfe`\x8e\x0e\x8e1P=\xc2:\xc2Z \xbc`o\xb0z\xfc\xb3 t\xe6\x05a\x94\xaeptpd\xe8\x89\x89\x1ad\x8f\xf7\xab\x0b\x84\xce\xbc \x8c\xd2\x15\x8e\x0e\x8e\x0c=1Q\x83\xec\xf1~u\x81\xd0\x99\x17\x84Q\xba\xc2\xd1\xc1\x91\xa1\'&j\x90\xdd\xc1\xb1\xb9\xe5B\xf3\xe6\x08u\x07G\x07G\xe7!\xdc\x11\xf9Dvp\x8c\x9e\x01\xcd\x9b#\xd4\x1d\x1c\x1d\x1c\x9d\x87pG\xe4\x13\xd9\xc11z\x064o\x8ePwptpt\x1e\xc2\x1d\xa9\xef\x0f\x0c\xc9\xc6\xb0\x16\x08\x9b{sd\xe8\x19W%dW|H}\x7f`H6\x86\xb5@\x18\xa5+\x1c\x19z\xc6U\t\xd9\x15\x1fR\xdf\x1f\x18\x92\x8da-\x10F\xe9\nG\x86\x9eqUBv\xc5\x87\xc8\'2\xbbD\x9dm\xb9 \xbc\x9e\xb5 \x8c\xb0f\xe6\x0f_\x0b\xe5\xe8\x0eP\x17\x08\x05\xc2\xebY\x0b\xc2\x08kf\xfe\xf0\xb5P\x8e\xee\x00u\x81P \xbc\x9e\xb5 \x8c\xb0f\xe6\x0f{\xa1W8FXGX\xc7\xb3\xd5\x9b\x7f\xaep\x8c\x9e\x96\xa8Av\x07\xc7\x08\xeb\x08kg&tG\xaa\xc7?W8FOK\xd4 \xbb\x83c\x84u\x84\xb53\x13\xba#\xd5\xe3\x9f+\x1c\xa3\xa7%j\x90\x9dm9\xc0\xda\x99\t]\xf2\x82\xb09t\xa1g\x9c>\x13\xf9D\x8e\'\xa9GX\xc7u\xd5\xdd\x01\x84\xcd\xa1\x0b=\xe3\xf4\x99\xc8\'r<I=\xc2:\xae\xab\xee\x0e l\x0e]\xe8\x19\xa7\xcfD>\x91\x9b\x07\xa8;8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\x07\xa8\xb3\r8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\x07\xa8\xb3\r8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\xa1\x1c\x1d\x1c\x05\xc2\xb8\xb7\xfa5\xe2\xb2+f\xa2NC\xc61\x1c\x1d\x1c\x05\xc2x\x89\xfa5\xe2\xb2+f\xa2NC\xc61\x1c\x1d\x1c\x05\xc2x\x89\xfa5\xe2\xb2+f\x9ew>\xc0\xb2\x9b\x07p\xbc\xeez\xcf7\xb3n\xb1\xfey\xac\x04\xeb\xff\xbf\x1f\xcb\xd8\xa7H\xe9r\x08\x99\xa4~\xfa\xe7\n\xc7\xe8\xa9D>\x91O\x91\xd2\xe5\x102I\xfd\xf4\xcf\x15\x8e\xd1S\x89|"\x9f"\xa5\xcb!d\x92\xfa\xe9\x9f+\x1c\xa3\xa7\x12\xf9D\xc6\xa1?\xe8\xe9\x0e\x18`\xed\xe0(\x10:86w\x9e\x89\xb2\x8c=\x8f\xe5;b\xecy,\xdf\x11c\xb3\xb39\x9e\xae\xab\xe7{\xc8}\xbaO%\xea4\xe4<\x96\xef\x88!\xe7\xb1|G\x0c\xf9\xdec\x11\n\x84\x02a\x13\xcd#\xac\x05\xc2\x1d{\xe9\xea\xf1\x12\x8e\xaekA(\x10\n\x84M4\x8f\xb0\x16\x08w\xec\xa5\xab\xc7K8\xba\xae\x05\xa1@(\x106\xd1<\xc2Z \xdc\xb1\x97\xae\x1e/\xe1\xe8\xba\xaeplvm!\xae@\xd8\x9f\x15\xf9Dvc\xaepd\xabp\xbc8\xe0\x16q\x05\xc2\xfe\xac\xc8\'\xb2\x1bs\x85#[\x85\xe3\xc5\x01\xb7\x88+\x10\xf6gE>\x91\x9b\x07\xe8\xe9\x96[\x10\xc6\x11\x84\x0e\x8e\x02\xa1@\xe8\xe0\x18=\x95\xc8\'2\x0e\xfdAO\xe9R\x17\x08\xe3\x08B\x07G\x81P tp\x8c\x9eJ\xe4\x13\x19\x87\xfe\xa0\xa7t\xa9\x0b\x84q\x04\xa1\x83\xa3@(\x10:8FO%\xf2\x89|\x8a\x94\xf1\x12\xf5\xf8gA\xe8\xe0(\x106\xa5\x96\xc8\'\xf2)R\xba\x1cB\xb7\xb7z<\xf2\nG\x81\xb0)\xb5D>\x91O\x91\xd2\xe5\x10\xba\xbd\xd5\xe3\x91W8\n\x84M\xa9%\xf5\x1d>\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\xb5\xc1y\xac\r\xcecmp\x1ek\x83\xf3X\x1b\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\x15\xf3\xeb\xd7\xbf\x93`e\x1cvz\xce<\x00\x00\x00\x00IEND\xaeB`\x82'
# print(byte_data)
# print(type(byte_data))

# image = Image.open(io.BytesIO(byte_string))
# image.show()
# image.save("qr_code.png")

# with open("qr_code.png", "wb") as file:
#     file.write(byte_data)
# print(type(byte_data)) # ensure it is byte representation











# ----------------------------------------------------------------------------------------------------------------------
# byte_stream = b'\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00d\x00\x00\x00d\x08\x02\x00\x00\x00\xff\x80\x02\x03\x00\x00\x00\x01sRGB\x00\xae\xce\x1c\xe9\x00\x00\x00\x04gAMA\x00\x00\xb1\x8f\x0b\xfca\x05\x00\x00\x00\tpHYs\x00\x00\x0e\xc3\x00\x00\x0e\xc3\x01\xc7o\xa8d\x00\x00\x05dIDATx^\xed\xd0\xc1\xae\xe48\x0cC\xd1\xf9\xff\x9f\xee\xa9\xc6;0\x84\x8e\xa0\xd0I\xf5,\x06\xbe\x9b@!EI\xfe\xe7\xd7!\xe6<\xd6\x06\xe7\xb168\x8f\xb5\xc1y\xac\r\xcecmp\x1ek\x83\xf3X\x1b\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\xb5A\xf4X\xff\xbcCJ\x81\xd0\xc1Q t\xd2\x82\xe3)R\xee8\x8f\xf5\x1b)w\x9c\xc7\xfa\x8d\x94;\xf6\x1eK\x9d\xa1\'\xebb-\x10\xba\x1c\xf5\xf8\'AO\xdc\x15\xf9D\xfe\xcdUX\x0b\x84.G=\xfeI\xd0\x13wE>\x91\x7fs\x15\xd6\x02\xa1\xcbQ\x8f\x7f\x12\xf4\xc4]\x91Od\xb7\xdc\x15\x8eq\x15B\x07G\x810&\xab\xbb?W8\xba\xae\x99\xc8\'\xf2{\xab\x10:8\n\x841Y\xdd\xfd\xb9\xc2\xd1u\xcdD>\x91\xdf[\x85\xd0\xc1Q \x8c\xc9\xea\xee\xcf\x15\x8e\xaek&\xf2\x89|\xbd\x8az\xcc!\x8c#\x16\xacY\xf2\x82\xa3\xeb\x9a\x89|"_\xaf\xa2\x1es\x08\xe3\x88\x05k\x96\xbc\xe0\xe8\xbaf"\x9f\xc8\xd7\xab\xa8\xc7\x1c\xc28b\xc1\x9a%/8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'2\x0e\xfdAO\xd7E(\x10\n\x84\x02\xa1KV\x7fo\xc3\x96\xc8\'\xf2{\xab\x10\n\x84\x02\xa1@\xe8\x92\xd5\xdf\xdb\xb0%\xf2\x89\xfc\xde*\x84\x02\xa1@(\x10\xbad\xf5\xf76l\x89|"\x9f"%;R\xfd\xf4\xcf3\xa4\xdc\x11\xf9D>E\xca\xe6\xd9\xea\xcd?\xcf\x90rG\xe4\x13\xf9\x14)\x9bg\xab7\xff<C\xca\x1d\xa9\xef\xbb\xd8\xb1\xdb\x920>\x04\xe1?\xe7<\xd6\x06\xe7\xb16\x88\x06\xdb\xb1@\xe8\xe0\xe8\xe0\x18\x03\xd5#\xac#\xac\x05\xc2\x0b\xbe?\x98\xa3\x83c\x0cT\x8f\xb0\x8e\xb0\x16\x08/\xf8\xfe`\x8e\x0e\x8e1P=\xc2:\xc2Z \xbc`o\xb0z\xfc\xb3 t\xe6\x05a\x94\xaeptpd\xe8\x89\x89\x1ad\x8f\xf7\xab\x0b\x84\xce\xbc \x8c\xd2\x15\x8e\x0e\x8e\x0c=1Q\x83\xec\xf1~u\x81\xd0\x99\x17\x84Q\xba\xc2\xd1\xc1\x91\xa1\'&j\x90\xdd\xc1\xb1\xb9\xe5B\xf3\xe6\x08u\x07G\x07G\xe7!\xdc\x11\xf9Dvp\x8c\x9e\x01\xcd\x9b#\xd4\x1d\x1c\x1d\x1c\x9d\x87pG\xe4\x13\xd9\xc11z\x064o\x8ePwptpt\x1e\xc2\x1d\xa9\xef\x0f\x0c\xc9\xc6\xb0\x16\x08\x9b{sd\xe8\x19W%dW|H}\x7f`H6\x86\xb5@\x18\xa5+\x1c\x19z\xc6U\t\xd9\x15\x1fR\xdf\x1f\x18\x92\x8da-\x10F\xe9\nG\x86\x9eqUBv\xc5\x87\xc8\'2\xbbD\x9dm\xb9 \xbc\x9e\xb5 \x8c\xb0f\xe6\x0f_\x0b\xe5\xe8\x0eP\x17\x08\x05\xc2\xebY\x0b\xc2\x08kf\xfe\xf0\xb5P\x8e\xee\x00u\x81P \xbc\x9e\xb5 \x8c\xb0f\xe6\x0f{\xa1W8FXGX\xc7\xb3\xd5\x9b\x7f\xaep\x8c\x9e\x96\xa8Av\x07\xc7\x08\xeb\x08kg&tG\xaa\xc7?W8FOK\xd4 \xbb\x83c\x84u\x84\xb53\x13\xba#\xd5\xe3\x9f+\x1c\xa3\xa7%j\x90\x9dm9\xc0\xda\x99\t]\xf2\x82\xb09t\xa1g\x9c>\x13\xf9D\x8e\'\xa9GX\xc7u\xd5\xdd\x01\x84\xcd\xa1\x0b=\xe3\xf4\x99\xc8\'r<I=\xc2:\xae\xab\xee\x0e l\x0e]\xe8\x19\xa7\xcfD>\x91\x9b\x07\xa8;8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\x07\xa8\xb3\r8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\x07\xa8\xb3\r8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\xa1\x1c\x1d\x1c\x05\xc2\xb8\xb7\xfa5\xe2\xb2+f\xa2NC\xc61\x1c\x1d\x1c\x05\xc2x\x89\xfa5\xe2\xb2+f\xa2NC\xc61\x1c\x1d\x1c\x05\xc2x\x89\xfa5\xe2\xb2+f\x9ew>\xc0\xb2\x9b\x07p\xbc\xeez\xcf7\xb3n\xb1\xfey\xac\x04\xeb\xff\xbf\x1f\xcb\xd8\xa7H\xe9r\x08\x99\xa4~\xfa\xe7\n\xc7\xe8\xa9D>\x91O\x91\xd2\xe5\x102I\xfd\xf4\xcf\x15\x8e\xd1S\x89|"\x9f"\xa5\xcb!d\x92\xfa\xe9\x9f+\x1c\xa3\xa7\x12\xf9D\xc6\xa1?\xe8\xe9\x0e\x18`\xed\xe0(\x10:86w\x9e\x89\xb2\x8c=\x8f\xe5;b\xecy,\xdf\x11c\xb3\xb39\x9e\xae\xab\xe7{\xc8}\xbaO%\xea4\xe4<\x96\xef\x88!\xe7\xb1|G\x0c\xf9\xdec\x11\n\x84\x02a\x13\xcd#\xac\x05\xc2\x1d{\xe9\xea\xf1\x12\x8e\xaekA(\x10\n\x84M4\x8f\xb0\x16\x08w\xec\xa5\xab\xc7K8\xba\xae\x05\xa1@(\x106\xd1<\xc2Z \xdc\xb1\x97\xae\x1e/\xe1\xe8\xba\xaeplvm!\xae@\xd8\x9f\x15\xf9Dvc\xaepd\xabp\xbc8\xe0\x16q\x05\xc2\xfe\xac\xc8\'\xb2\x1bs\x85#[\x85\xe3\xc5\x01\xb7\x88+\x10\xf6gE>\x91\x9b\x07\xe8\xe9\x96[\x10\xc6\x11\x84\x0e\x8e\x02\xa1@\xe8\xe0\x18=\x95\xc8\'2\x0e\xfdAO\xe9R\x17\x08\xe3\x08B\x07G\x81P tp\x8c\x9eJ\xe4\x13\x19\x87\xfe\xa0\xa7t\xa9\x0b\x84q\x04\xa1\x83\xa3@(\x10:8FO%\xf2\x89|\x8a\x94\xf1\x12\xf5\xf8gA\xe8\xe0(\x106\xa5\x96\xc8\'\xf2)R\xba\x1cB\xb7\xb7z<\xf2\nG\x81\xb0)\xb5D>\x91O\x91\xd2\xe5\x10\xba\xbd\xd5\xe3\x91W8\n\x84M\xa9%\xf5\x1d>\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\xb5\xc1y\xac\r\xcecmp\x1ek\x83\xf3X\x1b\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\x15\xf3\xeb\xd7\xbf\x93`e\x1cvz\xce<\x00\x00\x00\x00IEND\xaeB`\x82'
# decoded_data = base64.b64decode(byte_stream)
# print(decoded_data)
#
# image = Image.open(io.BytesIO(byte_stream))
# image.show()
# image.save("qr_code.png")



# file = open('qr_code.txt', 'rb').read()
# print(type(file))  # <class 'bytes'>
# print(file)        # b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x01\x06\x0
# #
# with open("image.png", "wb") as img:
#     img.write(file)
#
# file = Image.open("image.png")
# file.save("output.png")


# # None of these attempts to write valid PNG file worked
#
# with open("qr_code.txt", "wb") as file:
#     # file.write(byte_data.file.read())
#     # to correctly write string as bytes .encode() has to be used
#     file.write(byte_stream.encode())

# with open("qr_code.txt", "rb") as file:
#     data = file.read()
#     print(type(file))



# with open('qr_code.png', 'wb') as f:
#     f.write(data)

# # byte_data = urllib.request.urlopen(url_data)
# # byte_data = requests.get(url_data)
# with open("qr_code.png", "wb") as file:
#     # file.write(byte_data.file.read())
#     # to correctly write string as bytes .encode() has to be used
#     file.write(data)

# use PIL to write to PNG file

# count = os.stat("qr_code.txt").st_size / 2
# with open("qr_code.txt", "rb") as f:
#     byte_data = bytearray(f.read())
#
# image = Image.open(io.BytesIO(byte_data))
# image.save("qr_code.png")


# byteImgIO = io.BytesIO()
# byteImg = Image.open("qr_code.png")
# byteImg.save(byteImgIO, "PNG")
# byteImgIO.seek(0)
# byteImg = byteImgIO.read(b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00d\x00\x00\x00d\x08\x02\x00\x00\x00\xff\x80\x02\x03\x00\x00\x00\x01sRGB\x00\xae\xce\x1c\xe9\x00\x00\x00\x04gAMA\x00\x00\xb1\x8f\x0b\xfca\x05\x00\x00\x00\tpHYs\x00\x00\x0e\xc3\x00\x00\x0e\xc3\x01\xc7o\xa8d\x00\x00\x05dIDATx^\xed\xd0\xc1\xae\xe48\x0cC\xd1\xf9\xff\x9f\xee\xa9\xc6;0\x84\x8e\xa0\xd0I\xf5,\x06\xbe\x9b@!EI\xfe\xe7\xd7!\xe6<\xd6\x06\xe7\xb168\x8f\xb5\xc1y\xac\r\xcecmp\x1ek\x83\xf3X\x1b\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\xb5A\xf4X\xff\xbcCJ\x81\xd0\xc1Q t\xd2\x82\xe3)R\xee8\x8f\xf5\x1b)w\x9c\xc7\xfa\x8d\x94;\xf6\x1eK\x9d\xa1\'\xebb-\x10\xba\x1c\xf5\xf8\'AO\xdc\x15\xf9D\xfe\xcdUX\x0b\x84.G=\xfeI\xd0\x13wE>\x91\x7fs\x15\xd6\x02\xa1\xcbQ\x8f\x7f\x12\xf4\xc4]\x91Od\xb7\xdc\x15\x8eq\x15B\x07G\x810&\xab\xbb?W8\xba\xae\x99\xc8\'\xf2{\xab\x10:8\n\x841Y\xdd\xfd\xb9\xc2\xd1u\xcdD>\x91\xdf[\x85\xd0\xc1Q \x8c\xc9\xea\xee\xcf\x15\x8e\xaek&\xf2\x89|\xbd\x8az\xcc!\x8c#\x16\xacY\xf2\x82\xa3\xeb\x9a\x89|"_\xaf\xa2\x1es\x08\xe3\x88\x05k\x96\xbc\xe0\xe8\xbaf"\x9f\xc8\xd7\xab\xa8\xc7\x1c\xc28b\xc1\x9a%/8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'\xf2\xf5*\xea\xec\xcf\x82P l\xe6,8\xba\xae\x99\xc8\'2\x0e\xfdAO\xd7E(\x10\n\x84\x02\xa1KV\x7fo\xc3\x96\xc8\'\xf2{\xab\x10\n\x84\x02\xa1@\xe8\x92\xd5\xdf\xdb\xb0%\xf2\x89\xfc\xde*\x84\x02\xa1@(\x10\xbad\xf5\xf76l\x89|"\x9f"%;R\xfd\xf4\xcf3\xa4\xdc\x11\xf9D>E\xca\xe6\xd9\xea\xcd?\xcf\x90rG\xe4\x13\xf9\x14)\x9bg\xab7\xff<C\xca\x1d\xa9\xef\xbb\xd8\xb1\xdb\x920>\x04\xe1?\xe7<\xd6\x06\xe7\xb16\x88\x06\xdb\xb1@\xe8\xe0\xe8\xe0\x18\x03\xd5#\xac#\xac\x05\xc2\x0b\xbe?\x98\xa3\x83c\x0cT\x8f\xb0\x8e\xb0\x16\x08/\xf8\xfe`\x8e\x0e\x8e1P=\xc2:\xc2Z \xbc`o\xb0z\xfc\xb3 t\xe6\x05a\x94\xaeptpd\xe8\x89\x89\x1ad\x8f\xf7\xab\x0b\x84\xce\xbc \x8c\xd2\x15\x8e\x0e\x8e\x0c=1Q\x83\xec\xf1~u\x81\xd0\x99\x17\x84Q\xba\xc2\xd1\xc1\x91\xa1\'&j\x90\xdd\xc1\xb1\xb9\xe5B\xf3\xe6\x08u\x07G\x07G\xe7!\xdc\x11\xf9Dvp\x8c\x9e\x01\xcd\x9b#\xd4\x1d\x1c\x1d\x1c\x9d\x87pG\xe4\x13\xd9\xc11z\x064o\x8ePwptpt\x1e\xc2\x1d\xa9\xef\x0f\x0c\xc9\xc6\xb0\x16\x08\x9b{sd\xe8\x19W%dW|H}\x7f`H6\x86\xb5@\x18\xa5+\x1c\x19z\xc6U\t\xd9\x15\x1fR\xdf\x1f\x18\x92\x8da-\x10F\xe9\nG\x86\x9eqUBv\xc5\x87\xc8\'2\xbbD\x9dm\xb9 \xbc\x9e\xb5 \x8c\xb0f\xe6\x0f_\x0b\xe5\xe8\x0eP\x17\x08\x05\xc2\xebY\x0b\xc2\x08kf\xfe\xf0\xb5P\x8e\xee\x00u\x81P \xbc\x9e\xb5 \x8c\xb0f\xe6\x0f{\xa1W8FXGX\xc7\xb3\xd5\x9b\x7f\xaep\x8c\x9e\x96\xa8Av\x07\xc7\x08\xeb\x08kg&tG\xaa\xc7?W8FOK\xd4 \xbb\x83c\x84u\x84\xb53\x13\xba#\xd5\xe3\x9f+\x1c\xa3\xa7%j\x90\x9dm9\xc0\xda\x99\t]\xf2\x82\xb09t\xa1g\x9c>\x13\xf9D\x8e\'\xa9GX\xc7u\xd5\xdd\x01\x84\xcd\xa1\x0b=\xe3\xf4\x99\xc8\'r<I=\xc2:\xae\xab\xee\x0e l\x0e]\xe8\x19\xa7\xcfD>\x91\x9b\x07\xa8;8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\x07\xa8\xb3\r8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\x07\xa8\xb3\r8\n\x84l\xd6\x82\xf0ZR\xdf\x11\xf9D\x8e\xa1\x1c\x1d\x1c\x05\xc2\xb8\xb7\xfa5\xe2\xb2+f\xa2NC\xc61\x1c\x1d\x1c\x05\xc2x\x89\xfa5\xe2\xb2+f\xa2NC\xc61\x1c\x1d\x1c\x05\xc2x\x89\xfa5\xe2\xb2+f\x9ew>\xc0\xb2\x9b\x07p\xbc\xeez\xcf7\xb3n\xb1\xfey\xac\x04\xeb\xff\xbf\x1f\xcb\xd8\xa7H\xe9r\x08\x99\xa4~\xfa\xe7\n\xc7\xe8\xa9D>\x91O\x91\xd2\xe5\x102I\xfd\xf4\xcf\x15\x8e\xd1S\x89|"\x9f"\xa5\xcb!d\x92\xfa\xe9\x9f+\x1c\xa3\xa7\x12\xf9D\xc6\xa1?\xe8\xe9\x0e\x18`\xed\xe0(\x10:86w\x9e\x89\xb2\x8c=\x8f\xe5;b\xecy,\xdf\x11c\xb3\xb39\x9e\xae\xab\xe7{\xc8}\xbaO%\xea4\xe4<\x96\xef\x88!\xe7\xb1|G\x0c\xf9\xdec\x11\n\x84\x02a\x13\xcd#\xac\x05\xc2\x1d{\xe9\xea\xf1\x12\x8e\xaekA(\x10\n\x84M4\x8f\xb0\x16\x08w\xec\xa5\xab\xc7K8\xba\xae\x05\xa1@(\x106\xd1<\xc2Z \xdc\xb1\x97\xae\x1e/\xe1\xe8\xba\xaeplvm!\xae@\xd8\x9f\x15\xf9Dvc\xaepd\xabp\xbc8\xe0\x16q\x05\xc2\xfe\xac\xc8\'\xb2\x1bs\x85#[\x85\xe3\xc5\x01\xb7\x88+\x10\xf6gE>\x91\x9b\x07\xe8\xe9\x96[\x10\xc6\x11\x84\x0e\x8e\x02\xa1@\xe8\xe0\x18=\x95\xc8\'2\x0e\xfdAO\xe9R\x17\x08\xe3\x08B\x07G\x81P tp\x8c\x9eJ\xe4\x13\x19\x87\xfe\xa0\xa7t\xa9\x0b\x84q\x04\xa1\x83\xa3@(\x10:8FO%\xf2\x89|\x8a\x94\xf1\x12\xf5\xf8gA\xe8\xe0(\x106\xa5\x96\xc8\'\xf2)R\xba\x1cB\xb7\xb7z<\xf2\nG\x81\xb0)\xb5D>\x91O\x91\xd2\xe5\x10\xba\xbd\xd5\xe3\x91W8\n\x84M\xa9%\xf5\x1d>\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\xb5\xc1y\xac\r\xcecmp\x1ek\x83\xf3X\x1b\x9c\xc7\xda\xe0<\xd6\x06\xe7\xb168\x8f\x15\xf3\xeb\xd7\xbf\x93`e\x1cvz\xce<\x00\x00\x00\x00IEND\xaeB`\x82')
#
#
# dataBytesIO = io.BytesIO(byteImg)
# Image.open(dataBytesIO)